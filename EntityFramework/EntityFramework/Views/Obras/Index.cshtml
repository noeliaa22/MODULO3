@model IEnumerable<EntityFramework.Models.Obra>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> _signInManager
@inject UserManager<AppUser> _userManager



@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (_signInManager.IsSignedIn(User))
{
    AppUser user = await _userManager.GetUserAsync(User); //generar el objeto usuario

    <!--Para saber si el usuario logeado tiene el role de administrador-->
    @if (await _userManager.IsInRoleAsync(user, "Admin") || await _userManager.IsInRoleAsync(user, "PremiumUser"))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                Título
            </th>
            <th>
                Año de publicación
            </th>
            <th>
                Autor
            </th>
            <th>
                Categoria
            </th>
            <th>
                Imagen
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Obra obra in Model)
        {
            <tr>
                <td>
                    @obra.Titulo
                </td>
                <td>
                    @obra.AnioPublicacion
                </td>
                <td>
                    @obra.Autor.Nombre @obra.Autor.Apellido
                </td>
                <td>
                    <ul>
                        @foreach (ObraCategoria obracategoria in obra.ObraCategorias)
                        {
                            <li>@obracategoria.Categoria.Nombre</li>
                        }
                    </ul>
                </td>
                <td>
                    <img class="imagenObra" src=" @obra.Imagen" />
                </td>
                <td>
                    @if (_signInManager.IsSignedIn(User))
                    {
                        AppUser user = await _userManager.GetUserAsync(User); //generar el objeto usuario

                        <!--Para saber si el usuario logeado tiene el role de administrador-->
                        @if (await _userManager.IsInRoleAsync(user, "Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@obra.Id">Edit |</a>
                            <a asp-action="Delete" asp-route-id="@obra.Id"> Delete |</a>
                        }
                    }

                    <a asp-action="Details" asp-route-id="@obra.Id"> Details </a>
                </td>

            </tr>
        }
    </tbody>
</table>
